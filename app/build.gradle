buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

// Manifest version information!
def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 2 // bump for dogfood builds, public betas, etc.

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

apply from: "$rootDir/gradle/checkstyle.gradle"
apply from: "$rootDir/gradle/findbugs.gradle"
apply from: "$rootDir/gradle/pmd.gradle"
check.dependsOn('checkstyle')
check.dependsOn('findbugs')
check.dependsOn('pmd')

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url 'https://maven.fabric.io/public' }
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def date = new Date()
def buildTime = date.format("dd.MM.yy", TimeZone.getTimeZone("UTC"))
def buildTimeInternal = date.format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.ozm.rocks"

        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTimeInternal}\""

        testApplicationId "com.ozome.tests"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("../distribution/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file("../distribution/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            signingConfig signingConfigs.debug
            ext.betaDistributionReleaseNotesFilePath = "app/release_notes.txt"
            ext.betaDistributionEmailsFilePath = "app/beta_distribution_emails.txt"
            ext.betaDistributionNotifications=true
        }
        release {
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles file('proguard-rules.pro')
            signingConfig signingConfigs.release
            ext.betaDistributionReleaseNotesFilePath = "app/release_notes.txt"
            ext.betaDistributionEmailsFilePath = "app/beta_distribution_emails.txt"
            ext.betaDistributionNotifications=true

        }
    }

    lintOptions {
        abortOnError false

        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage', 'ContentDescription', 'UnusedResources',
                'IconColors', 'IconDensities', 'IconDuplicates', 'RtlHardcoded', 'GifUsage'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}
configurations {
    debugCompile
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:22.0.0'
    compile 'com.android.support:support-annotations:22.0.0'
    compile 'com.android.support:appcompat-v7:22.1.1'
    compile 'com.android.support:recyclerview-v7:22.0.0'
    compile 'com.android.support:cardview-v7:22.0.0'
    compile 'com.android.support:gridlayout-v7:22.0.0'

    // Third party
    compile project(':thirdparty:activity-livecycle-callbacks-compat')

    // Dependency Injection
    compile 'com.google.dagger:dagger:2.0'
    apt 'com.google.dagger:dagger-compiler:2.0'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // Network
    compile 'net.danlew:android.joda:2.7.2'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.squareup.picasso:picasso:2.5.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    debugCompile 'com.squareup.retrofit:retrofit-mock:1.9.0'

    // Data
    compile 'com.orhanobut:hawk:1.6'
    compile 'com.github.frankiesardo:auto-parcel:0.3'
    apt 'com.github.frankiesardo:auto-parcel-processor:0.3'

    // UI
    compile 'com.github.navasmdc:MaterialDesign:1.3@aar'
    compile 'com.rengwuxian.materialedittext:library:2.0.3'
    //    compile 'com.afollestad:material-dialogs:0.7.0.1'
    compile 'uk.co.chrisjenx:calligraphy:2.0.2'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'com.etsy.android.grid:library:1.0.5'
    compile 'com.facebook.fresco:fresco:0.4.0+'

    // Debug
    compile 'com.jakewharton.timber:timber:2.7.1'
    debugCompile 'com.jakewharton.madge:madge:1.1.1'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.1.1'
    debugCompile 'com.mattprecious.telescope:telescope:1.4.0@aar'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // rxJava
    compile 'io.reactivex:rxjava:1.0.8'
    compile 'io.reactivex:rxandroid:0.24.0'

    // Espresso 2 Dependencies
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.0') {
        exclude module: 'support-annotations'
    }
    //    testCompile 'junit:junit:4.12'

    //    testCompile "org.mockito:mockito-core:1.9.5"

    //    testCompile('org.robolectric:robolectric:2.4') {

    //        exclude group: 'com.android.support'

    //    }

//    testCompile 'junit:junit:4.12'
//    testCompile "org.mockito:mockito-core:1.9.5"
//    testCompile('org.robolectric:robolectric:2.4') {
//        exclude group: 'com.android.support'
//    }
    compile('com.crashlytics.sdk.android:crashlytics:2.2.4@aar') {
        transitive = true;
    }
}

// change apk name
android.applicationVariants.all { variant ->
    for (output in variant.outputs) {
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
            def fileName = "ozome-${output.name}.apk"
//            def fileName = "ozome-${output.name}-${buildTime}.apk"
            output.outputFile = new File(outputFile.parent, fileName)
        }
    }
}

// print build finish time
gradle.buildFinished { buildResult ->
    def buildFinishDate = new Date()
    def formattedDate = buildFinishDate.format('yyyy-MM-dd HH:mm:ss')
    println "Build finished: ${formattedDate}"
}
